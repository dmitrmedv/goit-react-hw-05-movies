{"version":3,"file":"static/js/145.9c1d8891.chunk.js","mappings":"uRAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,sCAA4CL,IAD9D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBV,EAASI,IAAT,gCACIL,EADJ,4DAC2DW,IAF7E,uBACGL,EADH,EACGA,KADH,kBAIEA,GAJF,kE,qICTP,EAvBmB,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SACpB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAMA,IAAMC,EAAQF,EAAaT,IAAI,UAQ/B,OACE,kBAAMY,SAPR,SAAsBC,GACpBA,EAAEC,iBACF,IAAMb,EAAOQ,EAAaT,IAAI,UAC9BO,EAASN,EACV,EAGC,WACE,kBAAOc,KAAK,OAAOC,SAdvB,YAA+C,IAAZC,EAAW,EAArBC,OAAUD,MACzBP,EAARO,EAAwB,CAAEE,OAAQF,GAA2B,CAAC,EAC/D,EAY+CA,MAAON,GAAS,MAC5D,mBAAQI,KAAK,SAAb,sBAGL,E,kBCyCD,EA3De,WACb,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOd,EAAP,KAAae,EAAb,KACA,GAAwBD,EAAAA,EAAAA,UAAS,MAAjC,eAAOE,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAuBjB,EAAAA,EAAAA,MACjBG,GADN,eAC2BX,IAAI,WAE/B0B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOtB,EAAAA,EAAAA,IAAeC,GAFtB,OAERsB,EAFQ,OAGdL,EAAQK,EAAOC,SAHD,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQXzB,GACFqB,GAEH,GAAE,CAACrB,KAEJc,EAAAA,EAAAA,WAAS,WACP,GAAIT,EAAO,CACT,IAAMgB,EAAS,mCAAG,gHAEYtB,EAAAA,EAAAA,IAAeM,GAF3B,gBAENkB,EAFM,EAENA,QACRN,EAAQM,GAHM,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQXpB,GACFgB,GAEH,CACF,GAAE,IAEH,IAAMK,EACJV,GACAA,EAAKW,KAAI,YAA6B,IAA1B9B,EAAyB,EAAzBA,GAAI+B,EAAqB,EAArBA,eACd,OACE,SAAC,KAAD,CAAMC,GAAE,UAAKhC,GAAeiC,MAAO,CAAEC,KAAMb,GAA3C,UACE,wBAAKU,KADiB/B,EAI3B,IAKH,OACE,iCACE,SAAC,EAAD,CAAYI,SANhB,SAAkBU,GAChBI,EAAQJ,EACT,KAKG,wBAAKK,GAAQU,MAGlB,C","sources":["api/api.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'cdfc08b3296f0164149119b33e9bcc21';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCastById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviewsById(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getMovieByName(name) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n  return data;\n}\n","import { useSearchParams } from 'react-router-dom';\n\nconst SearchForm = ({ getMovie }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function handlerChange({ target: { value } }) {\n    value ? setSearchParams({ search: value }) : setSearchParams({});\n  }\n\n  const query = searchParams.get('search');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const data = searchParams.get('search');\n    getMovie(data);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handlerChange} value={query || ''} />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { getMovieByName } from 'api/api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(null);\n  const location = useLocation();\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchName = async () => {\n      try {\n        const result = await getMovieByName(name);\n        setList(result.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (name) {\n      fetchName();\n    }\n  }, [name]);\n\n  useState(() => {\n    if (query) {\n      const fetchName = async () => {\n        try {\n          const { results } = await getMovieByName(query);\n          setList(results);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      if (query) {\n        fetchName();\n      }\n    }\n  }, []);\n\n  const resultList =\n    list &&\n    list.map(({ id, original_title }) => {\n      return (\n        <Link to={`${id}`} key={id} state={{ from: location }}>\n          <li>{original_title}</li>\n        </Link>\n      );\n    });\n  function getMovie(value) {\n    setName(value);\n  }\n\n  return (\n    <>\n      <SearchForm getMovie={getMovie} />\n      <ul>{list && resultList}</ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieById","id","getCastById","getMovieByName","name","getMovie","useSearchParams","searchParams","setSearchParams","query","onSubmit","e","preventDefault","type","onChange","value","target","search","useState","setName","list","setList","location","useLocation","useEffect","fetchName","result","results","console","log","resultList","map","original_title","to","state","from"],"sourceRoot":""}